var n=Object.defineProperty;var u=(i,s,e)=>s in i?n(i,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[s]=e;var r=(i,s,e)=>u(i,typeof s!="symbol"?s+"":s,e);import{aa as a,X as l,a5 as c,S as d,ab as m,R as f,a7 as p}from"./index-CI1TXeFk.js";class h extends a{constructor(){super(...arguments);r(this,"list",async e=>{if(this.pool.exhaustive())return l.createSuccessful(this.pool.list());this.listPromise||(this.listPromise=c.listMembers({oid:e}));const t=await this.listPromise;return t.successful?(this.pool.setList(t.value,!0),l.createSuccessful(this.pool.list())):t});r(this,"updateMember",async e=>{const t=await c.updateMember(e);if(!t.successful)return t;const o=this.pool.get(e.targetUid);return o&&e.isAdmin!==void 0&&(o.isAdmin=e.isAdmin),l.createSuccessful(void 0)});r(this,"deleteMember",async e=>{const t=this.pool.get(e.targetUid);t||d.handleErrorQuietly(new Error(`MemberRepository.deleteMember: member not found by uid(${e.targetUid})`));const o=await c.deleteMember(e);return o.successful?(this.pool.del(e.targetUid),t&&this.publishEvent(new m(f.Delete,[t])),l.createSuccessful(void 0)):o});r(this,"pool",p.createEmpty({keyField:"uid"}));r(this,"listPromise")}}const b=new h,M=b;export{M as m};
